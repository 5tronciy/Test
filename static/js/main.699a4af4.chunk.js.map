{"version":3,"sources":["components/Input.module.css","components/Output.module.css","components/deltaTimeItem.module.css","components/Input.tsx","components/deltaTimeItem.tsx","components/Output.tsx","utils/deltaTimeToStringConverter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Input","onChangeText","onChangeDate","dateValue","onChangeTime","timeValue","params","className","styles","content","textBox","placeholder","maxRows","onChange","dateBox","value","format","isOpen","clearIcon","required","timeBox","disableClock","to","create","buttonCreateName","InputConnected","useState","Date","setDate","setTime","textValue","setText","time","JSON","stringify","text","date","getTime","Number","slice","event","target","toString","DeltaTimeItem","deltaTimeItem","Output","deltaTime","appData","deltaTimeWrapper","map","OutputConnected","useParams","parse","todayTimeStamp","difference","Math","abs","deltaTimeStrings","forEach","item","index","push","deltaTimeToStringConverter","floor","App","exact","path","children","RouterConnected","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.699a4af4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Input_content__2RFu4\",\"textBox\":\"Input_textBox__2IsBa\",\"dateBox\":\"Input_dateBox__1TYxU\",\"timeBox\":\"Input_timeBox__15Qc8\",\"create\":\"Input_create__3smsa\",\"buttonCreateName\":\"Input_buttonCreateName__cYvR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Output_content__1b0Se\",\"text\":\"Output_text__7jXA3\",\"deltaTimeWrapper\":\"Output_deltaTimeWrapper__1EgLV\",\"deltaTime\":\"Output_deltaTime__1kmQC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deltaTimeItem\":\"deltaTimeItem_deltaTimeItem__1tvQR\"};","import React, { useState } from \"react\";\r\nimport DatePicker from \"react-date-picker/dist/entry.nostyle\";\r\nimport \"./DatePicker.css\";\r\nimport TimePicker, { TimePickerValue } from \"react-time-picker\";\r\nimport \"./TimePicker.css\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport styles from \"./Input.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst InputConnected = () => {\r\n  const [dateValue, setDate] = useState(new Date());\r\n  const [timeValue, setTime] = useState(\"00:00\");\r\n  const [textValue, setText] = useState(\"\");\r\n\r\n  const time = new Date(dateValue);\r\n\r\n  const params = JSON.stringify({\r\n    text: textValue,\r\n    date:\r\n      time.getTime() +\r\n      Number(timeValue.slice(0, 2)) * 360000 +\r\n      Number(timeValue.slice(3, 5)) * 60000,\r\n  });\r\n\r\n  const onChangeText = (event: any) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const onChangeDate = (event: any) => {\r\n    setDate(event);\r\n  };\r\n  const onChangeTime = (event: TimePickerValue) => {\r\n    setTime(event.toString());\r\n  };\r\n\r\n  return (\r\n    <Input\r\n      onChangeText={onChangeText}\r\n      onChangeDate={onChangeDate}\r\n      dateValue={dateValue}\r\n      onChangeTime={onChangeTime}\r\n      timeValue={timeValue}\r\n      params={params}\r\n    />\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  onChangeText: (event: any) => void;\r\n  onChangeDate: (event: Date | Date[]) => void;\r\n  dateValue: Date | undefined;\r\n  onChangeTime: (event: TimePickerValue) => void;\r\n  timeValue: TimePickerValue;\r\n  params: string;\r\n}\r\n\r\nexport const Input = ({\r\n  onChangeText,\r\n  onChangeDate,\r\n  dateValue,\r\n  onChangeTime,\r\n  timeValue,\r\n  params,\r\n}: Props) => {\r\n  return (\r\n    <div className={styles.content}>\r\n      <div className={styles.textBox} placeholder=\"Любой текст...\">\r\n        <TextareaAutosize\r\n          maxRows={5}\r\n          onChange={onChangeText}\r\n          placeholder=\"Любой текст...\"\r\n        />\r\n      </div>\r\n\r\n      <div className={styles.dateBox} placeholder=\"Дата\">\r\n        <DatePicker\r\n          onChange={onChangeDate}\r\n          value={dateValue}\r\n          format=\"dd MMMM yyyy\"\r\n          isOpen={false}\r\n          clearIcon={null}\r\n          required={true}\r\n        />\r\n      </div>\r\n      <div className={styles.timeBox} placeholder=\"Время\">\r\n        <TimePicker\r\n          onChange={onChangeTime}\r\n          value={timeValue}\r\n          format={\"HH:mm\"}\r\n          disableClock={true}\r\n          isOpen={false}\r\n          required\r\n        />\r\n      </div>\r\n      <Link to={params}>\r\n        <div className={styles.create}>\r\n          <span className={styles.buttonCreateName}>Создать</span>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputConnected;\r\n","import React from \"react\";\r\nimport styles from \"./deltaTimeItem.module.css\";\r\n\r\ninterface DeltaTimeItemInterface {\r\n  deltaTimeItem:string\r\n}\r\n\r\nconst deltaTimeItemConnected = ({ deltaTimeItem }: DeltaTimeItemInterface) => {\r\n  return <DeltaTimeItem deltaTimeItem={deltaTimeItem} />;\r\n};\r\n\r\nexport const DeltaTimeItem = ({ deltaTimeItem }: DeltaTimeItemInterface) => {\r\n  return <li className={styles.deltaTimeItem}>{deltaTimeItem}</li>;\r\n};\r\n\r\nexport default deltaTimeItemConnected;\r\n","import React from \"react\";\r\nimport { DeltaTimeItem } from \"./deltaTimeItem\";\r\nimport styles from \"./Output.module.css\";\r\nimport { useParams } from \"react-router\";\r\nimport { deltaTimeToStringConverter } from \"../utils/deltaTimeToStringConverter\";\r\n\r\ninterface Params {\r\n  params: string;\r\n}\r\n\r\nconst OutputConnected = () => {\r\n  const { params }: Params = useParams();\r\n  const appData: AppData = JSON.parse(params);\r\n  const today = new Date();\r\n  const todayTimeStamp = today.getTime();\r\n  const difference = Math.abs(Number(appData.date) - todayTimeStamp);\r\n  const deltaTime = [\r\n    Math.floor(difference / (1000 * 3600 * 24 * 365.25)),\r\n    Math.floor(difference / (1000 * 3600 * 24 * 12)) % 30,\r\n    Math.floor(difference / (1000 * 3600 * 24)) % 365,\r\n    Math.floor(difference / (1000 * 3600)) % 24,\r\n    Math.floor(difference / (1000 * 60)) % 60,\r\n    Math.floor(difference / 1000) % 60,\r\n  ];\r\n\r\n  const deltaTimeStrings: string[] = deltaTimeToStringConverter(deltaTime);\r\n\r\n  return <Output deltaTime={deltaTimeStrings} appData={appData} />;\r\n};\r\n\r\ninterface AppData {\r\n  text: string;\r\n  date: Number;\r\n}\r\n\r\ninterface Props {\r\n  deltaTime: string[];\r\n  appData: AppData;\r\n}\r\n\r\nexport const Output = ({ deltaTime, appData }: Props) => {\r\n  return (\r\n    <>\r\n      <div className={styles.content}>\r\n        <div className={styles.deltaTimeWrapper}>\r\n          <ul className={styles.deltaTime}>\r\n            {deltaTime.map((deltaTimeItem: string) => (\r\n              <DeltaTimeItem\r\n                deltaTimeItem={deltaTimeItem}\r\n                key={deltaTimeItem}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className={styles.text}>{appData.text}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OutputConnected;\r\n","export function deltaTimeToStringConverter(deltaTime: number[]) {\r\n  const deltaTimeStrings: string[] = [];\r\n  deltaTime.forEach((item, index) => {\r\n    switch (index) {\r\n      case 0:\r\n        item === 1\r\n          ? deltaTimeStrings.push(`${item} год`)\r\n          : item > 1 && item < 5\r\n          ? deltaTimeStrings.push(`${item} года`)\r\n          : deltaTimeStrings.push(`${item} лет`);\r\n        break;\r\n      case 1:\r\n        item === 1\r\n          ? deltaTimeStrings.push(`${item} месяц`)\r\n          : item > 1 && item < 5\r\n          ? deltaTimeStrings.push(`${item} месяца`)\r\n          : deltaTimeStrings.push(`${item} месяцев`);\r\n        break;\r\n      case 2:\r\n        item === 1\r\n          ? deltaTimeStrings.push(`${item} день`)\r\n          : item > 1 && item < 5\r\n          ? deltaTimeStrings.push(`${item} дня`)\r\n          : deltaTimeStrings.push(`${item} дней`);\r\n        break;\r\n      case 3:\r\n        item % 20 === 1\r\n          ? deltaTimeStrings.push(`${item} час`)\r\n          : (item > 1 && item < 5) || (item > 21 && item < 24)\r\n          ? deltaTimeStrings.push(`${item} часа`)\r\n          : deltaTimeStrings.push(`${item} часов`);\r\n        break;\r\n      case 4:\r\n        item === 1 || (item > 20 && item % 10 === 1)\r\n          ? deltaTimeStrings.push(`${item} минута`)\r\n          : (item > 1 && item < 5) ||\r\n            (item > 20 && item % 10 > 1 && item % 10 < 5)\r\n          ? deltaTimeStrings.push(`${item} минуты`)\r\n          : deltaTimeStrings.push(`${item} минут`);\r\n        break;\r\n      case 5:\r\n        item === 1 || (item > 20 && item % 10 === 1)\r\n          ? deltaTimeStrings.push(`${item} секунда`)\r\n          : (item > 1 && item < 5) ||\r\n            (item > 20 && item % 10 > 1 && item % 10 < 5)\r\n          ? deltaTimeStrings.push(`${item} секунды`)\r\n          : deltaTimeStrings.push(`${item} секунд`);\r\n        break;\r\n    }\r\n  });\r\n  var index: number = 0;\r\n  for (index; ; ++index) {\r\n    if (deltaTimeStrings[index][0] === \"0\") {\r\n      delete deltaTimeStrings[index];\r\n    } else break;\r\n  }\r\n\r\n  return deltaTimeStrings;\r\n}\r\n","import React from \"react\";\r\nimport Input from \"./components/Input\";\r\nimport Output from \"./components/Output\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nconst RouterConnected = () => {\r\n  return <App />;\r\n};\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/Test\" children={<Input />} />\r\n        <Route path=\"/Test/:params\" children={<Output />} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default RouterConnected;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}